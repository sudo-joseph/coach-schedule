// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserType {
  COACH
  STUDENT
}

model User {
  id                  Int                 @id @default(autoincrement())
  createdAt           DateTime            @default(now())
  name                String
  phoneNumber         String              @db.VarChar(15)
  email               String              @unique
  type                UserType
  coachAvailabilities CoachAvailability[] @relation("CoachAvailabilityRelation")
  appointment         Appointment[]       @relation("AppointmentRelation")
}

model CoachAvailability {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  coachId   Int
  coach     User     @relation("CoachAvailabilityRelation", fields: [coachId], references: [id])
}

model Appointment {
  id             Int              @id @default(autoincrement())
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  studentId      Int
  student        User             @relation("AppointmentRelation", fields: [studentId], references: [id])
  StudentSession StudentSession[]
}

model StudentSession {
  id            Int         @id @default(autoincrement())
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  satisfaction  Int         @default(1) @db.Integer
  notes         String?     @db.Text
  appointmentId Int
  appointment   Appointment @relation(fields: [appointmentId], references: [id])
}
